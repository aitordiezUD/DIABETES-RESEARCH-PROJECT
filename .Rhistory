heviest[max(heviest$mpg),]
max(heviest$mpg)
heviest[heviest$mpg == max(heviest$mpg),]
ordered_cars <- order(mtcars$wt,decreasing = TRUE)
heaviest_cars <- ordered_cars[1:10]
1:nrow(mtcars)
y<-c("XL","L","S","XL")
y <- factor(y,ordered = TRUE, levels = c("S","M","L","XL"))
y
switch(EXPR = "hola",
hola = print("hola"),
adios = print("adios"))
s <- switch(EXPR = "hola",
hola = print("hola"),
adios = print("adios"))
s
switch(EXPR = 1,
1 = print("hola"),
switch(EXPR = 1,
print("hola"),
print("adios"))
library(tibble)
tib<-tibble(
nmb=1:10,
ltt=LETTERS[LETTERS>="A" & LETTERS<="J"],
fls=FALSE
)
View(tib)
tib2<-tribble(
~asteroid,~diameter,~pho,
"Ceres", 939.4, FALSE,
"Didymos", 0.78, TRUE
)
View(tib2)
tb1 <-tibble(
numbers= sample(1:10,6),
lts= sample(letters,6)
)
View(tb1)
tb1$numbers[2]
tb1$fls<-False
tb1$fls<-FALSE
tb1$fls<-c(FALSE,TRUE)
1:nrow(mtcars) %in% heaviest_cars
l <- list(uno = 1:10,dos = 10:20)
l[1]
l["uno"]
l[[1]]
l[["uno"]]
p <- list(num=9:2, wine=list(TRUE, seq(1,2,0.2)), state.name)
names(p)
length(tib1)
length(tb1)
length(unlist(tb1)
)
rownames(tb1)<-20:25
tb1$numbers[tb1$numbers>5]
tb1[tb1$numbers>5]
tb1$numbers>5
df1 <- as.data.frame(tb1)
rlang::last_trace()
df1[tb1$numbers>5]
View(df1)
df1[df1$numbers>5,]
tb1[tb1$numbers>5,]
tb1$lts[tb1$lts< "s"]
tb2<-rbind(tb1,list(0,"A",FALSE))
View(tb2)
tb3 <- cbind(tb2,tb2$numbers>6)
View(tb3)
tb3 <- cbind(tb2,tb2$numbers<6)
tb4 <- rbind(tb3[1:3],list(11,"Z",FALSE,FALSE),tb3[4:6])
tb4 <- rbind(tb3[1:3],list(11,"Z",FALSE,FALSE),tb3[4:nrow(tb3)])
tb3[4:nrow(tb3)]
tb3[4:7]
tb3[1:3]
View(df1)
df1[1:3]
tb4 <- rbind(tb3[1:3,],list(11,"Z",FALSE,FALSE),tb3[4:7,])
View(tb4)
View(tb3)
df5 <- data.frame(n=0:12, x=(0:12)^2)
df5 <- data.frame(numbers=0:12, x=(0:12)^2)
tib5<-merge(tb4,df5,by="numbers")
View(tib5)
View(df5)
View(tb4)
m<-matrix(1:4,ncol=2)
m
size(m)
length(m)
unlist(m)
l<-list(uno = 1:10,dos=2:20)
df<- as.data.frame(l)
l<-list(uno = 1:10,dos=11:20)
df<- as.data.frame(l)
View(df)
# Exercise 146
app <- list(
22:2,
runif(10),
c(pi,sqrt(2)),
c(T,T,F,F)
)
b <- sapply(app,var)
b
d <- sapply(app, "[",2)
d
s <- lapply(1:10,function(x)x^2)
s
unlist(s)
sapply(s)
sapply(s,"[")
l
class(l[1])
class(l[[1])
class(l[[1]])
is.vector(l)
is.atomic(l)
is.atomic(1:10)
m <- diag(5)
m
m <- diag(c(1,9,2))
m
diag(m)
y ~ x
y(2)
w<- lapply(1:10, function(x)x**2)
w
w.names
names(w)
z<-unlist(w)
is.list(z)
is.atomic(z)
print(now(tzone="Asia/Tokyo"))
# print(with_tz(now(), tzone="Asia/Tokyo"))
# print(strftime(Sys.time(), tz="Asia/Tokyo"))
print(now(tzone="Asia/Tokyo"))
print(with_tz(now(), tzone="Asia/Tokyo"))
print(strftime(Sys.time(), tz="Asia/Tokyo"))
summary(iris)
str(iris)
cor(rock&area,rock$shape)
cor(rock$area,rock$shape)
cor(rock$area,rock$peri)
cor(rock$peri,rock$perm)
source("~/.active-rstudio-document")
View(df)
View(df)
summary(df)
boxplot(df)
cor(df$residual.sugar,df$density)
plot(iris)
plot(state.x77)
view(state.x77)
state.x77
plot(state.x77[,"Income"],state.x77[,"Illiteracy"], col = "red")
plot(state.x77[,"Income"],state.x77[,"Illiteracy"], col = 1:2
)
plot(state.x77[,"Income"],state.x77[,"Illiteracy"], col = c("red","blue"))
x <- runif(100)
plot(x, type="l")
plot(x, type="l",col="blue")
plot(1:8, sample(1:8), pch=24, cex=1.5, bg="orange",
main="Random points", xlab="x axis", ylab="y axis")
plot(1:8, sample(1:8), pch=24, cex=1, bg="orange",
main="Random points", xlab="x axis", ylab="y axis")
plot(1:8, sample(1:8), pch=24, cex=1.5, bg="orange",
main="Random points", xlab="x axis", ylab="y axis")
plot(1:8, sample(1:8), pch=24, cex=1, bg="orange",
main="Random points", xlab="x axis", ylab="y axis")
plot(1:8, sample(1:8), pch=24, cex=1, bg="orange",main="Random points", xlab="x axis", ylab="y axis")
plot(1:8, sample(1:8), pch=24, cex=1.5, bg="orange",main="Random points", xlab="x axis", ylab="y axis")
x <- rnorm(100)
y <- rnorm(100)
x
y
shiny::runApp('C:/Users/aitor/Downloads')
source("~/.active-rstudio-document")
install.packages("ggplot2")
source("~/.active-rstudio-document")
ggplot(datos, aes(x = Año, y = Valor, group = 1)) +
geom_line() +
labs(title = "Análisis Temporal", x = "Año", y = "Valor") +
theme_minimal()
source("~/.active-rstudio-document")
ggplot(datos, aes(x = Año, y = Valor, group = 1)) +
geom_line() +
labs(title = "Análisis Temporal", x = "Año", y = "Valor") +
theme_minimal()
?geom_histogram
setwd("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT")
setwd("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT")
#Check if the following packages are installed, if not install them
pacman::p_load(
rio,          # File import
here,         # File locator
skimr,        # get overview of data
tidyverse,    # data management + ggplot2 graphics
gtsummary,    # summary statistics and tests
rstatix,      # summary statistics and statistical tests
janitor,      # adding totals and percents to tables
scales,       # easily convert proportions to percents
flextable,    # converting tables to pretty images
corrplot,      # study correlation
vcd
)
# Reading the first dataset
d1 <- read.csv("DESCRIPTIVE ANALYSIS/DATASET 1/diabetes_d1.csv")
# Creating a data frame with only the binary variables of the dataset
dBinary <- d1%>% select(-c(Diabetes_012,BMI, MentHlth, PhysHlth, GenHlth,
Age, Education, Income))
dBinarySummary <- data.frame()
# Turn binary columns into factors so that they are not interpreted as numeric
dBinary <- lapply(dBinary, factor)
# Create a function to compute the mode of a variable
Mode <- function(x){
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Compute the mode of each of the variables
modes <- sapply(d1%>%select(-c(BMI, CholCheck, Fruits, Veggies, NoDocbcCost, HeartDiseaseorAttack)), Mode)
# Create a data frame having all the modes
dfModes <- as.data.frame(modes)
# Create a data frame with the mode of the first 8 variables
dfModes1 <- cbind(varNames1 = c("Diabetes_012", "HighBP", "HighChol", "Smoker", "Stroke", "PhysActivity", "HvyAlcoholConsump", "AnyHealthcare"),Mode1 = dfModes[1:8, "modes"])
# Create a data frame with the mode of the second 8 variables
dfModes2 <- cbind(varNames2 = c("GenHlth","MentHlth","PhysHlth", "DiffWalk", "Sex", "Age", "Education", "Income"),Mode2 = dfModes[9:16, "modes"])
# Merge both of the data frames
dfModes <- cbind(dfModes1, dfModes2)
# Convert dfModes into a data frame again (until this point it is a matrix)
dfModes <- as.data.frame(dfModes)
# Create a flex table
ftModes <- flextable(dfModes)
#Saving flextable as a docx in order to copy and paste the table in the report
save_as_docx(  "Summary" =ftModes,path = "DESCRIPTIVE ANALYSIS/DATASET 1/summary_d1.docx")
# Compute the proportion of each of the variables
props <- sapply(dBinary, function(x) prop.table(table(x)))
# Compute the chi-square test to see the relation between two variables
# Create the contingency tables.
cont_table <- table(dBinary$Smoker, dBinary$HighChol)
chisq_res <- chisq.test(cont_table)
#Between Sex and High BP
cont_table2 <- table(dBinary$Sex, dBinary$HighBP)
chisq_res2 <- chisq.test(cont_table2)
# Compute the Anova test to see the relation between a qualitative and a quantitative variable.
# Between BMI and Diabetes_012
res <- aov(d1$BMI ~ d1$Diabetes_012)
# Fit a model
model <- lm(BMI ~ as.factor(Diabetes_012), data = d1)
# Get the result of the test
anova_result <- anova(model)
View(props)
View(props)
#Check if the following packages are installed, if not install them
pacman::p_load(
rio,          # File import
here,         # File locator
skimr,        # get overview of data
tidyverse,    # data management + ggplot2 graphics
gtsummary,    # summary statistics and tests
rstatix,      # summary statistics and statistical tests
janitor,      # adding totals and percents to tables
scales,       # easily convert proportions to percents
flextable,    # converting tables to pretty images
corrplot,      # study correlation
vcd,
kableExtra
)
props <- props[,c(1,2,4,14,8,9)]
round(props,3) %>%
kable("html") %>%
kable_styling(full_width = F)
rownames(props) <- NULL
round(props,3) %>%
kable("html") %>%
kable_styling(full_width = F)
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
# Reshape d3 to long format in order to plot it
data_long <- gather(d3[,c("BloodPressure","BMI","Glucose","Insulin")], key = "Measurement", value = "Value")
# Create boxplot using ggplot2
ggplot(data_long, aes(x = Measurement, y = Value, fill=Measurement)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE) +
geom_jitter(color="#636363", size=0.7, alpha=0.5) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Boxplots of BloodPressure, BMI, Glucose and Insulin") +
xlab("")
# Reshape d3 to long format in order to plot it
data_long <- gather(d3[,c("BloodPressure","BMI","Glucose","Insulin")], key = "Measurement", value = "Value")
# Create boxplot using ggplot2
ggplot(data_long, aes(x = Measurement, y = Value, fill=Measurement)) +
geom_boxplot() +
scale_fill_viridis_b(discrete = TRUE) +
geom_jitter(color="#636363", size=0.7, alpha=0.5) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Boxplots of BloodPressure, BMI, Glucose and Insulin") +
xlab("")
#Check if the following packages are installed, if not install them
pacman::p_load(
pastecs,      # for data summaries
tidyverse,    # data management + ggplot2 graphics
flextable,    # converting tables to pretty images
corrplot,     # study correlation
scales,
tidyr         # Reshape dataframes, helpful to plot them
)
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
ggplot(data_long, aes(x = Measurement, y = Value, fill=Measurement)) +
geom_boxplot() +
geom_jitter(color="#636363", size=0.7, alpha=0.5) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Boxplots of BloodPressure, BMI, Glucose and Insulin") +
xlab("")
ggplot(data_long, aes(x = Measurement, y = Value, fill=Measurement)) +
geom_boxplot() +
geom_jitter(color="#636363", size=0.7, alpha=0.5) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Boxplots of BloodPressure, BMI, Glucose and Insulin") +
xlab("")
?scale_color_viridis
??scale_color_viridis
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
??theme_ipsum
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
str(d3)
summary(d3)
# Get the quartiles and IQR for each column (excluding the summary rows)
quartiles <- cbind("Stat" = c("Q1","Q3","IQR"),apply(d3[,1:8], 2, function(x) {
q <- quantile(x)
c(Q1 = q[1], Q3 = q[3], IQR = q[3] - q[1])
}))
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 3/descriptive_analysis_D3.R")
stat.desc(d3,norm=TRUE)
# Let us use the following library to visualize our data in 3d
library('scatterplot3d')
install.packages("scatterplot3d")
# Let us use the following library to visualize our data in 3d
library('scatterplot3d')
# this is the column for the dependent variable
y <- c(5,5,8,3.5)
# this is the matrix fo independent variables
x <- matrix(c(1,1,1,1,1.5,0.5,5,1),nrow=4,ncol=2)
# this is the equation to obtain the parameters given the optimization procedure
b <- solve(t(x)%*%x)%*%t(x)%*%y
# these are the parameters
b
# these are our predictions
yhat <- x%*%b
# let us visualize the data
s3d <- scatterplot3d(x=x[,2],y=c(0,0,0,0),z=y,
main='Statistics',
xlab='Week',xlim=0:5,
ylab='Exam',ylim=0:15,
zlab='Mark',zlim=0:10,
angle=45,
type='h',
pch=16,color='black')
# let us visualize the regression
s3d$plane3d(c(b[1],b[2],0),col='blue')
# let us visualize our predictions
s3d$points3d(x=x[,2],y=c(0,0,0,0),z=yhat,
pch=16,col='blue')
# this is r square
r2 <- 1-sum((y-yhat)^2)/sum((y-mean(y))^2)
r2
# model 12 (include hours for exam)
# again these is the vector of the dependent variable
y <- c(5,5,8,3.5)
# this is the matrix of independent variables
x <- matrix(c(1,1,1,1,10,15,5,5),nrow=4,ncol=2)
# this is the formula for the parameters
b <- solve(t(x)%*%x)%*%t(x)%*%y
# the values of the parameters
b
# our predictions
yhat <- x%*%b
# this is our data
s3d <- scatterplot3d(x=c(0,0,0,0),y=x[,2],z=y,
main='Statistics',
xlab='Week',xlim=0:5,
ylab='Exam',ylim=0:15,
zlab='Mark',zlim=0:10,
angle=55,
type='h',
pch=16,color='black')
# this plane represents our regression
s3d$plane3d(c(b[1],b[2],0),col='blue')
# this points are our predictions
s3d$points3d(x=c(0,0,0,0),y=x[,2],z=yhat,
pch=16,col='blue')
# and this is r square
r2 <- 1-sum((y-yhat)^2)/sum((y-mean(y))^2)
r2
# dependent variable
y <- c(5,5,8,3.5)
# matrix of independent variables
x <- matrix(c(1,1,1,1,1.5,0.5,5,1,10,15,5,5),nrow=4,ncol=3)
# equation for the parameters
b <- solve(t(x)%*%x)%*%t(x)%*%y
# the parameters
b
# the predictions
yhat <- x%*%b
# the data
s3d <- scatterplot3d(x=x[,2],y=x[,3],z=y,
main='Statistics',
xlab='Week',xlim=0:5,
ylab='Exam',ylim=0:15,
zlab='Mark',zlim=0:10,
angle=45,
type='h',
pch=16,color='black')
# the regression
s3d$plane3d(b,col='blue')
# the predictions
s3d$points3d(x=x[,2],y=x[,3],z=yhat,
pch=16,col='blue')
# r square
r2 <- 1-sum((y-yhat)^2)/sum((y-mean(y))^2)
r2
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 2/descriptive_analysis_D2.R")
source("C:/Users/aitor/OneDrive/Escritorio/ADVANCED STATISTICS/DIABETES RESEARCH PROJECT/DESCRIPTIVE ANALYSIS/DATASET 2/descriptive_analysis_D2.R")
#Plot the relation between the age and if they have been medicated
ggplot(d2, aes(x = age, fill = diabetesMed)) +
geom_bar(position = "dodge", stat = "count") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
View(d2)
ggplot(d2, aes(x = gender, fill = diabetesMed)) +
geom_bar(position = "dodge", stat = "count") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
ggplot(d2, aes(x = age, fill = time_in_hospital)) +
geom_bar(position = "dodge", stat = "count") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
ggplot(d2, aes(x = age, y = time_in_hospital)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
ggplot(d2, aes(x = age, y = time_in_hospital, fill=gender)) +
geom_bar(position = "dodge", stat = "identity") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
ggplot(d2, aes(x = age, fill = A1Cresult)) +
geom_bar(position = "dodge", stat = "count") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
ggplot(d2[d2$A1Cresult != "None",], aes(x = age, fill = A1Cresult)) +
geom_bar(position = "dodge", stat = "count") +
labs(title = "Relationship between Age Range and Medication Status",
x = "Age",
y = "Patient count") +
theme_minimal()
#Plot the relation between the age and time in hospital
ggplot(d2, aes(x = age, fill = time_in_hospital)) +
geom_bar(position = "dodge", stat = "count") +
labs(title = "Relationship between Age Range and Time in Hospital",
x = "Age",
y = "Time in Hospital") +
theme_minimal()
table(d2$gender,d2$num_lab_procedures)
str(d2)
summary(d2)
#Grouping the number of lab procedures
d2$group_procedures -> ifelse(d2$num_lab_procedures < 31,"<31",
ifelse(d2$num_lab_procedures < 44,"31-44",
ifelse(d2$num_lab_procedures < 57,"44-57","57-132")))
d2$group_procedures <- ifelse(d2$num_lab_procedures < 31,"<31",
ifelse(d2$num_lab_procedures < 44,"31-44",
ifelse(d2$num_lab_procedures < 57,"44-57","57-132")))
d2$group_procedures <- as.factor(d2$group_procedures)
table(d2$gender,d2$group_procedures)
table(d2$age,d2$group_procedures)
prop.table(table(d2$age,d2$group_procedures))
round(prop.table(table(d2$age,d2$group_procedures)),3)
round(prop.table(table(d2$A1Cresult,d2$group_procedures)),3)
round(prop.table(table(d2[d2$A1Cresult!="None","A1Cresult"],d2[d2$A1Cresult!="None","group_procedures")),3)
round(prop.table(table(d2[d2$A1Cresult!="None","A1Cresult"],d2[d2$A1Cresult!="None","group_procedures"])),3)
